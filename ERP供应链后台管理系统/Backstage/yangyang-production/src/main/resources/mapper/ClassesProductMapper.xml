<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.production.mapper.ClassesProductMapper">

    <resultMap type="ClassesProduct" id="ClassesProductResult">
        <result property="classesProductId"    column="classes_product_id"    />
        <result property="classesProductName"    column="classes_product_name"    />
        <result property="description"    column="description"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectClassesProductVo">
        select classes_product_id, classes_product_name, description, remark, create_by, create_time, update_by, update_time from lp_classes_product
    </sql>

    <select id="selectClassesProductList" parameterType="ClassesProduct" resultMap="ClassesProductResult">
        <include refid="selectClassesProductVo"/>
        <where>
            <if test="classesProductName != null  and classesProductName != ''"> and classes_product_name like concat('%', #{classesProductName}, '%')</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
        </where>
    </select>

    <select id="selectClassesProductByClassesProductId" parameterType="Integer" resultMap="ClassesProductResult">
        <include refid="selectClassesProductVo"/>
        where classes_product_id = #{classesProductId}
    </select>

    <insert id="insertClassesProduct" parameterType="ClassesProduct" useGeneratedKeys="true" keyProperty="classesProductId">
        insert into lp_classes_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="classesProductName != null">classes_product_name,</if>
            <if test="description != null">description,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="classesProductName != null">#{classesProductName},</if>
            <if test="description != null">#{description},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateClassesProduct" parameterType="ClassesProduct">
        update lp_classes_product
        <trim prefix="SET" suffixOverrides=",">
            <if test="classesProductName != null">classes_product_name = #{classesProductName},</if>
            <if test="description != null">description = #{description},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where classes_product_id = #{classesProductId}
    </update>

    <delete id="deleteClassesProductByClassesProductId" parameterType="Integer">
        delete from lp_classes_product where classes_product_id = #{classesProductId}
    </delete>

    <delete id="deleteClassesProductByClassesProductIds" parameterType="String">
        delete from lp_classes_product where classes_product_id in
        <foreach item="classesProductId" collection="array" open="(" separator="," close=")">
            #{classesProductId}
        </foreach>
    </delete>
</mapper>